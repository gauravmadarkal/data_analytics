library(mapdata)
states <- map_data('states')
states <- map_data('state')
View(states)
ggplot(data=state, aes(x=long, y=lat, fill=region, group=group)) +
geom_polygon(color = "white") +
guides(fill=FALSE) +
theme(axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank()) +
ggtitle('U.S. Map with States') +
coord_fixed(1.3)
ggplot(data=states, aes(x=long, y=lat, fill=region, group=group)) +
geom_polygon(color = "white") +
guides(fill=FALSE) +
theme(axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank()) +
ggtitle('U.S. Map with States') +
coord_fixed(1.3)
knitr::opts_chunk$set(echo = TRUE)
# INDIVIDUAL YEAR DATA
accidents_2014 <- read.csv('./Datasets/accident_2014.csv')[ ,c('STATE', 'YEAR', 'DRUNK_DR')]
accidents_2015 <- read.csv('./Datasets/accident_2015.csv')[ ,c('STATE', 'YEAR', 'DRUNK_DR')]
accidents_2016 <- read.csv('./Datasets/accident_2016.csv')[ ,c('STATE', 'YEAR', 'DRUNK_DR')]
accidents_2017 <- read.csv('./Datasets/accident_2017.csv')[ ,c('STATE', 'YEAR', 'DRUNK_DR')]
accidents_2018 <- read.csv('./Datasets/accident_2018.csv')[ ,c('STATE', 'YEAR', 'DRUNK_DR')]
#accidents_2019 <- read.csv('./Datasets/accident_2019.csv')[ ,c('STATE', 'YEAR', 'DRUNK_DR')]
# STATE NUMBERS
state_numbers_data <- read.csv('./Datasets/state_names_numbers.csv')
# GET THE POPULATION DATA FROM YEAR 2015 TO 2019 SO THAT WE CAN CALCULATE THE GALLONS ON ALCOHOL CONSUMED/SOLD STATE WISE
population_state_year <- read.csv('./Datasets/population_statewise_2014-2018.csv', check.names = FALSE)[, c("Name", "2014", "2015", '2016', "2017", "2018")]
# GET THE ALCOHOL CONSUMED DATA, WHICH HAS ETHANOL CONSUMED PER CAPITA
alcohol_consumption_raw <- read.csv('./Datasets/apparent_per_capita_alcohol_consumption_1977_2018.csv')
# COMBINE ALL REPORTS FROM EACH YEAR
accidents_all <- rbind(accidents_2014, accidents_2015, accidents_2016, accidents_2017, accidents_2018)
# FILTER ACCIDENTS WHICH ARE DRUNK DRIVE ONLY
dui_accidents_all <- subset(accidents_all, DRUNK_DR == 1)
# RETRIEVE THE STATENAMES BY JOINING WITH STATE NUMBERS
accidents_state_wise <- merge(dui_accidents_all, state_numbers_data, all.x = FALSE, all.y = FALSE)
accidents_state_wise$STATE_NAME <- tolower(accidents_state_wise$STATE_NAME)
# FILTER THE REQUIRED YEARS AND COLUMNS
alcohol_consumption_2014_2018 <- subset(alcohol_consumption_raw, year %in% c("2014", "2015", "2016", "2017", "2018"))[, c('state', 'year', 'ethanol_all_drinks_gallons_per_capita')]
# NORMALIZE THE STATE NAMES BY MAKING THEM UPPER CASE
alcohol_consumption_2014_2018$state <- tolower(alcohol_consumption_2014_2018$state)
# NORMALIZE THE STATE NAMES BY MAKING THEM UPPER CASE
population_state_year$Name <- tolower(population_state_year$Name)
# DECLARE ALL THE STATE POPULATION AS 0 INITIALLY
alcohol_consumption_2014_2018[, "population"] = 0
# LOOP OVER THE INDIVIDUAL STATE POPULATION AND ADD THE VALUES TO ALCOHOL CONSUMPTION DATA SET
# SINCE THE POPULATION DATASET IS IN A MATRIX FORMAT WE NEED TO LOOP OVER EACH ENTRY AND CANNOT AUTOMATICALLY JOIN
i <- 1
for (row in 1:nrow(population_state_year)) {
if (i < nrow(alcohol_consumption_2014_2018)) {
alcohol_consumption_2014_2018[i, "population"] = population_state_year[row, "2018"]
alcohol_consumption_2014_2018[i + 1, "population"] = population_state_year[row, "2017"]
alcohol_consumption_2014_2018[i + 2, "population"] = population_state_year[row, "2016"]
alcohol_consumption_2014_2018[i + 3, "population"] = population_state_year[row, "2015"]
alcohol_consumption_2014_2018[i + 4, "population"] = population_state_year[row, "2014"]
i <- i + 5
}
}
# REMOVE COMMAS AND CONVERT THE POPULATION VALUE TO A NUMERIC ONE
alcohol_consumption_2014_2018$population <-  as.numeric(gsub(",","",alcohol_consumption_2014_2018$population))
# MULIPLY THE POPULATION WITH THE PER CAPITA CONSUMPTION WHICH WILL GIVE US THE TOTAL GALLONS A STATE CONSUMED IN THAT YEAR
alcohol_consumption_2014_2018$total_gallons <- alcohol_consumption_2014_2018$ethanol_all_drinks_gallons_per_capita * alcohol_consumption_2014_2018$population
View(alcohol_consumption_2014_2018)
View(population_state_year)
gc()
# INDIVIDUAL YEAR DATA
accidents_2014 <- read.csv('./Datasets/accident_2014.csv')[ ,c('STATE', 'YEAR', 'DRUNK_DR')]
accidents_2015 <- read.csv('./Datasets/accident_2015.csv')[ ,c('STATE', 'YEAR', 'DRUNK_DR')]
accidents_2016 <- read.csv('./Datasets/accident_2016.csv')[ ,c('STATE', 'YEAR', 'DRUNK_DR')]
accidents_2017 <- read.csv('./Datasets/accident_2017.csv')[ ,c('STATE', 'YEAR', 'DRUNK_DR')]
accidents_2018 <- read.csv('./Datasets/accident_2018.csv')[ ,c('STATE', 'YEAR', 'DRUNK_DR')]
#accidents_2019 <- read.csv('./Datasets/accident_2019.csv')[ ,c('STATE', 'YEAR', 'DRUNK_DR')]
# STATE NUMBERS
state_numbers_data <- read.csv('./Datasets/state_names_numbers.csv')
# GET THE POPULATION DATA FROM YEAR 2015 TO 2019 SO THAT WE CAN CALCULATE THE GALLONS ON ALCOHOL CONSUMED/SOLD STATE WISE
population_state_year <- read.csv('./Datasets/population_statewise_2014-2018.csv', check.names = FALSE)[, c("Name", "2014", "2015", '2016', "2017", "2018")]
# GET THE ALCOHOL CONSUMED DATA, WHICH HAS ETHANOL CONSUMED PER CAPITA
alcohol_consumption_raw <- read.csv('./Datasets/apparent_per_capita_alcohol_consumption_1977_2018.csv')
# COMBINE ALL REPORTS FROM EACH YEAR
accidents_all <- rbind(accidents_2014, accidents_2015, accidents_2016, accidents_2017, accidents_2018)
# FILTER ACCIDENTS WHICH ARE DRUNK DRIVE ONLY
dui_accidents_all <- subset(accidents_all, DRUNK_DR == 1)
# RETRIEVE THE STATENAMES BY JOINING WITH STATE NUMBERS
accidents_state_wise <- merge(dui_accidents_all, state_numbers_data, all.x = FALSE, all.y = FALSE)
accidents_state_wise$region <- tolower(accidents_state_wise$STATE_NAME)
# FILTER THE REQUIRED YEARS AND COLUMNS
alcohol_consumption_2014_2018 <- subset(alcohol_consumption_raw, year %in% c("2014", "2015", "2016", "2017", "2018"))[, c('state', 'year', 'ethanol_all_drinks_gallons_per_capita')]
# NORMALIZE THE STATE NAMES BY MAKING THEM UPPER CASE
alcohol_consumption_2014_2018$region <- tolower(alcohol_consumption_2014_2018$state)
# NORMALIZE THE STATE NAMES BY MAKING THEM UPPER CASE
population_state_year$region <- tolower(population_state_year$Name)
# DECLARE ALL THE STATE POPULATION AS 0 INITIALLY
alcohol_consumption_2014_2018[, "population"] = 0
# LOOP OVER THE INDIVIDUAL STATE POPULATION AND ADD THE VALUES TO ALCOHOL CONSUMPTION DATA SET
# SINCE THE POPULATION DATASET IS IN A MATRIX FORMAT WE NEED TO LOOP OVER EACH ENTRY AND CANNOT AUTOMATICALLY JOIN
i <- 1
for (row in 1:nrow(population_state_year)) {
if (i < nrow(alcohol_consumption_2014_2018)) {
alcohol_consumption_2014_2018[i, "population"] = population_state_year[row, "2018"]
alcohol_consumption_2014_2018[i + 1, "population"] = population_state_year[row, "2017"]
alcohol_consumption_2014_2018[i + 2, "population"] = population_state_year[row, "2016"]
alcohol_consumption_2014_2018[i + 3, "population"] = population_state_year[row, "2015"]
alcohol_consumption_2014_2018[i + 4, "population"] = population_state_year[row, "2014"]
i <- i + 5
}
}
# REMOVE COMMAS AND CONVERT THE POPULATION VALUE TO A NUMERIC ONE
alcohol_consumption_2014_2018$population <-  as.numeric(gsub(",","",alcohol_consumption_2014_2018$population))
# MULIPLY THE POPULATION WITH THE PER CAPITA CONSUMPTION WHICH WILL GIVE US THE TOTAL GALLONS A STATE CONSUMED IN THAT YEAR
alcohol_consumption_2014_2018$total_gallons <- alcohol_consumption_2014_2018$ethanol_all_drinks_gallons_per_capita * alcohol_consumption_2014_2018$population
map_data_alcohol_consumption_2015 <- merge(subset(states, alcohol_consumption_2014_2018, year == "2014")[, c("region", "total_gallons")], all.x = FALSE, all.y = FALSE)
install.packages('mapdata')
library(mapdata)
states <- map_data('state')
map_data_alcohol_consumption_2015 <- merge(subset(states, alcohol_consumption_2014_2018, year == "2014")[, c("region", "total_gallons")], all.x = FALSE, all.y = FALSE)
install.packages("mapdata")
map_data_alcohol_consumption_2015 <- merge(states, subset(alcohol_consumption_2014_2018, year == "2014")[, c("region", "total_gallons")], all.x = FALSE, all.y = FALSE)
View(map_data_alcohol_consumption_2015)
ggplot(data=map_data_alcohol_consumption_2015, aes(x=long, y=lat, fill=total_gallons, group=group)) +
geom_polygon(color = "white") +
guides(fill=FALSE) +
theme(axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank()) +
ggtitle('U.S. Map with States') +
coord_fixed(1.3)
map_data_alcohol_consumption_2015 <- merge(states, subset(alcohol_consumption_2014_2018, year == "2015")[, c("region", "total_gallons")], all.x = FALSE, all.y = FALSE)
ggplot(data=map_data_alcohol_consumption_2015, aes(x=long, y=lat, fill=total_gallons, group=group)) +
geom_polygon(color = "white") +
guides(fill=FALSE) +
theme(axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank()) +
ggtitle('U.S. Map with States') +
coord_fixed(1.3)
ggplot(data=map_data_alcohol_consumption_2015, aes(x=long, y=lat, fill=order, group=group)) +
geom_polygon(color = "white") +
guides(fill=FALSE) +
theme(axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank()) +
ggtitle('U.S. Map with States') +
coord_fixed(1.3)
typeof(map_data_alcohol_consumption_2015$total_gallons)
library(usmap)
plot_usmap(regions = "states") +
labs(title = "U.S. States",
subtitle = "This is a blank map of the United States.") +
theme(panel.background=element_blank())
plot_usmap(regions = "states", data = map_data_alcohol_consumption_2015) +
labs(title = "U.S. States",
subtitle = "This is a blank map of the United States.") +
theme(panel.background=element_blank())
map_data_alcohol_consumption_2015$values = map_data_alcohol_consumption_2015$total_gallons
plot_usmap(regions = "states", data = map_data_alcohol_consumption_2015) +
labs(title = "U.S. States",
subtitle = "This is a blank map of the United States.") +
theme(panel.background=element_blank())
map_data_alcohol_consumption_2015$state = map_data_alcohol_consumption_2015$region
plot_usmap(regions = "states", data = map_data_alcohol_consumption_2015) +
labs(title = "U.S. States",
subtitle = "This is a blank map of the United States.") +
theme(panel.background=element_blank())
View(alcohol_consumption_2014_2018)
alcohol_consumption_2014 = subset(alcohol_consumption_2014_2018, year == "2014")
alcohol_consumption_2014$values = alcohol_consumption_2014_2018$total_gallons
alcohol_consumption_2014 = subset(alcohol_consumption_2014_2018, year == "2014")
alcohol_consumption_2014$values = alcohol_consumption_2014$total_gallons
View(alcohol_consumption_2014)
plot_usmap(regions = "states", data = alcohol_consumption_2014) +
labs(title = "U.S. States",
subtitle = "This is a blank map of the United States.") +
theme(panel.background=element_blank())
plot_usmap(data = alcohol_consumption_2014) +
labs(title = "U.S. States",
subtitle = "This is a blank map of the United States.") +
theme(panel.background=element_blank())
plot_usmap(data = alcohol_consumption_2014, include = alcohol_consumption_2014$state) +
labs(title = "U.S. States",
subtitle = "This is a blank map of the United States.") +
theme(panel.background=element_blank())
plot_usmap(data = alcohol_consumption_2014, include = alcohol_consumption_2014$state) +
scale_fill_continuous(low = "white", high = "blue", name = "Poverty Percentage Estimates", label = scales::comma) +
labs(title = "U.S. States",
subtitle = "This is a blank map of the United States.") +
theme(panel.background=element_blank())
plot_usmap(data = alcohol_consumption_2014, include = alcohol_consumption_2014$state) +
scale_fill_continuous(low = "white", high = "blue", name = "Poverty Percentage Estimates", label = scales::comma) +
labs(title = "U.S. States",
subtitle = "This is a blank map of the United States.") +
theme(panel.background=element_blank())
plot_usmap(data = alcohol_consumption_2014, include = alcohol_consumption_2014$state) +
scale_fill_continuous(low = "white", high = "blue", name = "Poverty Percentage Estimates", label = scales::comma) +
labs(title = "U.S. States",
)
plot_usmap(data = alcohol_consumption_2014, include = alcohol_consumption_2014$state) +
scale_fill_continuous(low = "white", high = "blue", name = "Poverty Percentage Estimates", label = scales::comma) +
labs(title = "U.S. States",
subtitle = "This is a blank map of the United States.")
View(alcohol_consumption_2014)
plot_usmap(data = alcohol_consumption_2014, include = alcohol_consumption_2014$state, values = values) +
scale_fill_continuous(low = "white", high = "blue", name = "Poverty Percentage Estimates", label = scales::comma) +
labs(title = "U.S. States",
subtitle = "This is a blank map of the United States.")
plot_usmap(data = alcohol_consumption_2014, include = alcohol_consumption_2014$state, values = "values") +
scale_fill_continuous(low = "white", high = "blue", name = "Poverty Percentage Estimates", label = scales::comma) +
labs(title = "U.S. States",
subtitle = "This is a blank map of the United States.")
View(states)
alcohol_consumption_2014$fips = fips(alcohol_consumption_2014$state)
View(alcohol_consumption_2014)
plot_usmap(data = alcohol_consumption_2014) +
scale_fill_continuous(low = "white", high = "blue", name = "Poverty Percentage Estimates", label = scales::comma) +
labs(title = "U.S. States",
subtitle = "This is a blank map of the United States.")
plot_usmap(data = alcohol_consumption_2014, values="total_gallons") +
scale_fill_continuous(low = "white", high = "blue", name = "Poverty Percentage Estimates", label = scales::comma) +
labs(title = "U.S. States",
subtitle = "This is a blank map of the United States.")
plot_usmap(data = alcohol_consumption_2014, values="total_gallons", color=orange, labels = FALSE, include = c("CT", "ME", "MA", "NH", "VT")) +
scale_fill_continuous(low = "white", high = "blue", name = "Alcohol Consumption", label = scales::comma) +
labs(title = "U.S. States",
subtitle = "This is a blank map of the United States.")
plot_usmap(data = alcohol_consumption_2014, values="total_gallons", color="orange", labels = FALSE, include = c("CT", "ME", "MA", "NH", "VT")) +
scale_fill_continuous(low = "white", high = "blue", name = "Alcohol Consumption", label = scales::comma) +
labs(title = "U.S. States",
subtitle = "This is a blank map of the United States.")
plot_usmap(data = alcohol_consumption_2014, values="total_gallons", color="orange", labels = FALSE, include = alcohol_consumption_2014$state) +
scale_fill_continuous(low = "white", high = "blue", name = "Alcohol Consumption", label = scales::comma) +
labs(title = "U.S. States",
subtitle = "This is a blank map of the United States.")
data = alcohol_consumption_2014[, c('state', 'fips', 'values')]
plot_usmap(data = data, values="values") +
scale_fill_continuous(low = "white", high = "blue", name = "Alcohol Consumption", label = scales::comma) +
labs(title = "U.S. States",
subtitle = "This is a blank map of the United States.")
library(usmap)
data$id <- seq.int(nrow(data))
typeof(data.id)
typeof(data$id)
plot_usmap(data = data, values="id") +
scale_fill_continuous(low = "white", high = "blue", name = "Alcohol Consumption", label = scales::comma)
data <- inner_join(us_map(), alcohol_consumption_2014)
install.packages('dlpyr')
install.packages('dplyr')
data <- inner_join(us_map(), alcohol_consumption_2014)
library(dplyr)
data <- inner_join(us_map(), alcohol_consumption_2014)
View(data)
plot_usmap(data = data, values="total_gallons") +
scale_fill_continuous(low = "white", high = "blue", name = "Alcohol Consumption", label = scales::comma)
data <- inner_join(us_map(), alcohol_consumption_2014) %>% select(fips, total_gallons)
distinct(data)
data <- distinct(data)
View(data)
plot_usmap(data = data, values="total_gallons") +
scale_fill_continuous(low = "white", high = "blue", name = "Alcohol Consumption", label = scales::comma)
plot_usmap(data = data, values="total_gallons", labels = TRUE) +
scale_fill_continuous(low = "white", high = "blue", name = "Alcohol Consumption", label = scales::comma)
accidents_year_vs_state <- aggregate(accidents_state_wise$DRUNK_DR, by=list(STATE_NAME=accidents_state_wise$STATE_NAME, YEAR=accidents_state_wise$YEAR), FUN=sum)
View(accidents_year_vs_state)
View(accidents_year_vs_state)
accidents_year_vs_state <- aggregate(accidents_state_wise$DRUNK_DR, by=list(state=accidents_state_wise$STATE_NAME, year=accidents_state_wise$YEAR), FUN=sum)
accidents_year_vs_state$fips = fips(accidents_year_vs_state$state)
map_data <- inner_join(us_map(), subset(accidents_year_vs_state, year=='2014')) %>% select(fips, x)
plot_usmap(data = map_data, values="x", labels = TRUE) +
scale_fill_continuous(low = "white", high = "red", name = "DUI Accidents 2014", label = scales::comma)
View(map_data)
View(accidents_year_vs_state)
subset(accidents_year_vs_state, year=='2014')
typeof(subset(accidents_year_vs_state, year=='2014'))
data.frame(subset(accidents_year_vs_state, year=='2014'))
typeof(data.frame(subset(accidents_year_vs_state, year=='2014')))
typeof(accidents_year_vs_state)
library(usmap)
library(dplyr)
accidents_year_vs_state <- aggregate(accidents_state_wise$DRUNK_DR, by=list(state=accidents_state_wise$STATE_NAME, year=accidents_state_wise$YEAR), FUN=sum)
accidents_year_vs_state$fips = fips(accidents_year_vs_state$state)
map_data <- inner_join(us_map(), subset(accidents_year_vs_state, year=='2014')) %>% select(fips, x)
plot_usmap(data = map_data, values="x", labels = TRUE) +
scale_fill_continuous(low = "white", high = "red", name = "DUI Accidents 2014", label = scales::comma)
dui_2014 <- subset(accidents_year_vs_state, year=='2014')
View(dui_2014)
map_data <- inner_join(us_map(), dui_2014) %>% select(fips, x)
map_data <- inner_join(us_map(), dui_2014)
typeof(dui_2014$fips)
typeof(alcohol_consumption_2014$fips)
map_data <- inner_join(us_map(), dui_2014, by=c("fips")) %>% select(fips, x)
map_data <- inner_join(us_map(), dui_2014, by=c("fips"))
View(map_data)
accidents_year_vs_state <- aggregate(incidents=accidents_state_wise$DRUNK_DR, by=list(state=accidents_state_wise$STATE_NAME, year=accidents_state_wise$YEAR), FUN=sum)
View(accidents_year_vs_state)
accidents_year_vs_state <- setNames(aggregate(accidents_state_wise$DRUNK_DR, by=list(state=accidents_state_wise$STATE_NAME, year=accidents_state_wise$YEAR), FUN=sum), c("state", "year", "occurences"))
View(accidents_year_vs_state)
accidents_year_vs_state$fips = fips(accidents_year_vs_state$state)
map_data <- inner_join(us_map(), subset(accidents_year_vs_state, year=='2014')) %>% select(fips, occurences)
plot_usmap(data = map_data, values="occurences", labels = TRUE) +
scale_fill_continuous(low = "white", high = "red", name = "DUI Accidents 2014", label = scales::comma)
View(map_data)
### ACCIDENTS USA HEATMAP FOR 2014 ###
map_data <- inner_join(us_map(), subset(accidents_year_vs_state, year=='2014')) %>% select(fips, occurences)
plot_usmap(data = map_data, values="occurences", labels = TRUE) +
scale_fill_continuous(low = "white", high = "red", name = "DUI Accidents 2014", label = scales::comma)
ggsave('./Plots/dui_accidents_2014.png', last_plot())
### ACCIDENTS USA HEATMAP FOR 2015 ###
map_data <- inner_join(us_map(), subset(accidents_year_vs_state, year=='2015')) %>% select(fips, occurences)
plot_usmap(data = map_data, values="occurences", labels = TRUE) +
scale_fill_continuous(low = "white", high = "red", name = "DUI Accidents 2015", label = scales::comma)
accidents_year_vs_state <- setNames(aggregate(accidents_state_wise$DRUNK_DR, by=list(state=accidents_state_wise$STATE_NAME, year=accidents_state_wise$YEAR), FUN=sum), c("state", "year", "occurences"))
accidents_year_vs_state$fips = fips(accidents_year_vs_state$state)
map_data <- inner_join(us_map(), accidents_year_vs_state)
### ACCIDENTS USA HEATMAP FOR 2014 ###
plot_usmap(data = subset(map_data, year=='2014') %>% select(fips, occurences), values="occurences", labels = TRUE) +
scale_fill_continuous(low = "white", high = "red", name = "DUI Accidents 2014", label = scales::comma)
View(map_data)
View(alcohol_consumption_2014_2018)
gc()
gc()
# INDIVIDUAL YEAR DATA
accidents_2014 <- read.csv('./Datasets/accident_2014.csv')[ ,c('STATE', 'YEAR', 'DRUNK_DR')]
accidents_2015 <- read.csv('./Datasets/accident_2015.csv')[ ,c('STATE', 'YEAR', 'DRUNK_DR')]
accidents_2016 <- read.csv('./Datasets/accident_2016.csv')[ ,c('STATE', 'YEAR', 'DRUNK_DR')]
accidents_2017 <- read.csv('./Datasets/accident_2017.csv')[ ,c('STATE', 'YEAR', 'DRUNK_DR')]
accidents_2018 <- read.csv('./Datasets/accident_2018.csv')[ ,c('STATE', 'YEAR', 'DRUNK_DR')]
#accidents_2019 <- read.csv('./Datasets/accident_2019.csv')[ ,c('STATE', 'YEAR', 'DRUNK_DR')]
# STATE NUMBERS
state_numbers_data <- read.csv('./Datasets/state_names_numbers.csv')
# GET THE POPULATION DATA FROM YEAR 2015 TO 2019 SO THAT WE CAN CALCULATE THE GALLONS ON ALCOHOL CONSUMED/SOLD STATE WISE
population_state_year <- read.csv('./Datasets/population_statewise_2014-2018.csv', check.names = FALSE)[, c("Name", "2014", "2015", '2016', "2017", "2018")]
# GET THE ALCOHOL CONSUMED DATA, WHICH HAS ETHANOL CONSUMED PER CAPITA
liquor_sales_raw <- read.csv('./Datasets/apparent_per_capita_liquor_sales_1977_2018.csv')
# COMBINE ALL REPORTS FROM EACH YEAR
accidents_all <- rbind(accidents_2014, accidents_2015, accidents_2016, accidents_2017, accidents_2018)
# FILTER ACCIDENTS WHICH ARE DRUNK DRIVE ONLY
dui_accidents_all <- subset(accidents_all, DRUNK_DR == 1)
# RETRIEVE THE STATENAMES BY JOINING WITH STATE NUMBERS
accidents_state_wise <- merge(dui_accidents_all, state_numbers_data, all.x = FALSE, all.y = FALSE)
accidents_state_wise$region <- tolower(accidents_state_wise$STATE_NAME)
# FILTER THE REQUIRED YEARS AND COLUMNS
liquor_sales_2014_2018 <- subset(liquor_sales_raw, year %in% c("2014", "2015", "2016", "2017", "2018"))[, c('state', 'year', 'ethanol_all_drinks_gallons_per_capita')]
# NORMALIZE THE STATE NAMES BY MAKING THEM UPPER CASE
liquor_sales_2014_2018$region <- tolower(liquor_sales_2014_2018$state)
# NORMALIZE THE STATE NAMES BY MAKING THEM UPPER CASE
population_state_year$region <- tolower(population_state_year$Name)
# DECLARE ALL THE STATE POPULATION AS 0 INITIALLY
liquor_sales_2014_2018[, "population"] = 0
# LOOP OVER THE INDIVIDUAL STATE POPULATION AND ADD THE VALUES TO ALCOHOL SALES DATA SET
# SINCE THE POPULATION DATASET IS IN A MATRIX FORMAT WE NEED TO LOOP OVER EACH ENTRY AND CANNOT AUTOMATICALLY JOIN
i <- 1
for (row in 1:nrow(population_state_year)) {
if (i < nrow(liquor_sales_2014_2018)) {
liquor_sales_2014_2018[i, "population"] = population_state_year[row, "2018"]
liquor_sales_2014_2018[i + 1, "population"] = population_state_year[row, "2017"]
liquor_sales_2014_2018[i + 2, "population"] = population_state_year[row, "2016"]
liquor_sales_2014_2018[i + 3, "population"] = population_state_year[row, "2015"]
liquor_sales_2014_2018[i + 4, "population"] = population_state_year[row, "2014"]
i <- i + 5
}
}
# REMOVE COMMAS AND CONVERT THE POPULATION VALUE TO A NUMERIC ONE
liquor_sales_2014_2018$population <-  as.numeric(gsub(",","",liquor_sales_2014_2018$population))
# MULIPLY THE POPULATION WITH THE PER CAPITA sales WHICH WILL GIVE US THE TOTAL GALLONS A STATE CONSUMED IN THAT YEAR
liquor_sales_2014_2018$total_gallons <- liquor_sales_2014_2018$ethanol_all_drinks_gallons_per_capita * liquor_sales_2014_2018$population
library(usmap)
library(dplyr)
accidents_year_vs_state <- setNames(aggregate(accidents_state_wise$DRUNK_DR, by=list(state=accidents_state_wise$STATE_NAME, year=accidents_state_wise$YEAR), FUN=sum), c("state", "year", "occurences"))
accidents_year_vs_state$fips = fips(accidents_year_vs_state$state)
map_data <- inner_join(us_map(), accidents_year_vs_state)
### ACCIDENTS USA HEATMAP FOR 2014 ###
plot_usmap(data = subset(map_data, year=='2014') %>% select(fips, occurences), values="occurences", labels = TRUE) +
scale_fill_continuous(low = "white", high = "red", name = "DUI Accidents 2014", label = scales::comma)
ggsave('./Plots/dui_accidents_2014.png', last_plot())
### ACCIDENTS USA HEATMAP FOR 2015 ###
plot_usmap(data = subset(map_data, year=='2015') %>% select(fips, occurences), values="occurences", labels = TRUE) +
scale_fill_continuous(low = "white", high = "red", name = "DUI Accidents 2015", label = scales::comma)
ggsave('./Plots/dui_accidents_2015.png', last_plot())
### ACCIDENTS USA HEATMAP FOR 2016 ###
plot_usmap(data = subset(map_data, year=='2016') %>% select(fips, occurences), values="occurences", labels = TRUE) +
scale_fill_continuous(low = "white", high = "red", name = "DUI Accidents 2016", label = scales::comma)
ggsave('./Plots/dui_accidents_2016.png', last_plot())
### ACCIDENTS USA HEATMAP FOR 2017 ###
plot_usmap(data = subset(map_data, year=='2017') %>% select(fips, occurences), values="occurences", labels = TRUE) +
scale_fill_continuous(low = "white", high = "red", name = "DUI Accidents 2017", label = scales::comma)
ggsave('./Plots/dui_accidents_2017.png', last_plot())
### ACCIDENTS USA HEATMAP FOR 2018 ###
plot_usmap(data = subset(map_data, year=='2018') %>% select(fips, occurences), values="occurences", labels = TRUE) +
scale_fill_continuous(low = "white", high = "red", name = "DUI Accidents 2018", label = scales::comma)
ggsave('./Plots/dui_accidents_2018.png', last_plot())
install.packages('dplyr')
library(dplyr)
install.packages('usmap')
library(usmap)
liquor_sales_2014_2018$fips = fips(liquor_sales_2014_2018$state)
map_data <- inner_join(us_map(), liquor_sales_2014_2018)
### ALCOHOL sales FOR YEAR 2014 ###
plot_usmap(data = subset(map_data, year == "2014") %>% select(fips, total_gallons), values="total_gallons", labels = TRUE) +
scale_fill_continuous(low = "white", high = "blue", name = "Alcohol sales", label = scales::comma)
install.packages("dplyr")
install.packages("usmap")
ggsave('./Plots/liqour_sales_2014.png', last_plot())
### ALCOHOL sales FOR YEAR 2015 ###
plot_usmap(data = subset(map_data, year == "2015") %>% select(fips, total_gallons), values="total_gallons", labels = TRUE) +
scale_fill_continuous(low = "white", high = "blue", name = "Alcohol sales", label = scales::comma)
install.packages("usmap")
ggsave('./Plots/liqour_sales_2015.png', last_plot())
### ALCOHOL sales FOR YEAR 2016 ###
plot_usmap(data = subset(map_data, year == "2016") %>% select(fips, total_gallons), values="total_gallons", labels = TRUE) +
scale_fill_continuous(low = "white", high = "blue", name = "Alcohol sales", label = scales::comma)
ggsave('./Plots/liqour_sales_2016.png', last_plot())
### ALCOHOL sales FOR YEAR 2017 ###
plot_usmap(data = subset(map_data, year == "2017") %>% select(fips, total_gallons), values="total_gallons", labels = TRUE) +
scale_fill_continuous(low = "white", high = "blue", name = "Alcohol sales", label = scales::comma)
ggsave('./Plots/liqour_sales_2017.png', last_plot())
### ALCOHOL sales FOR YEAR 2018 ###
plot_usmap(data = subset(map_data, year == "2018") %>% select(fips, total_gallons), values="total_gallons", labels = TRUE) +
scale_fill_continuous(low = "white", high = "blue", name = "Alcohol sales", label = scales::comma)
ggsave('./Plots/liqour_sales_2018.png', last_plot())
### ALCOHOL sales FOR YEAR 2014 ###
plot_usmap(data = subset(map_data, year == "2014") %>% select(fips, total_gallons), values="total_gallons", labels = TRUE) +
scale_fill_continuous(low = "white", high = "blue", name = "Alcohol sales 2014", label = scales::comma)
ggsave('./Plots/liqour_sales_2014.png', last_plot())
### ALCOHOL sales FOR YEAR 2015 ###
plot_usmap(data = subset(map_data, year == "2015") %>% select(fips, total_gallons), values="total_gallons", labels = TRUE) +
scale_fill_continuous(low = "white", high = "blue", name = "Alcohol sales 2015", label = scales::comma)
ggsave('./Plots/liqour_sales_2015.png', last_plot())
### ALCOHOL sales FOR YEAR 2016 ###
plot_usmap(data = subset(map_data, year == "2016") %>% select(fips, total_gallons), values="total_gallons", labels = TRUE) +
scale_fill_continuous(low = "white", high = "blue", name = "Alcohol sales 2016", label = scales::comma)
ggsave('./Plots/liqour_sales_2016.png', last_plot())
### ALCOHOL sales FOR YEAR 2017 ###
plot_usmap(data = subset(map_data, year == "2017") %>% select(fips, total_gallons), values="total_gallons", labels = TRUE) +
scale_fill_continuous(low = "white", high = "blue", name = "Alcohol sales 2017", label = scales::comma)
ggsave('./Plots/liqour_sales_2017.png', last_plot())
### ALCOHOL sales FOR YEAR 2018 ###
plot_usmap(data = subset(map_data, year == "2018") %>% select(fips, total_gallons), values="total_gallons", labels = TRUE) +
scale_fill_continuous(low = "white", high = "blue", name = "Alcohol sales 2018", label = scales::comma)
ggsave('./Plots/liqour_sales_2018.png', last_plot())
gc()
gc()
# INDIVIDUAL YEAR DATA
accidents_2014 <- read.csv('./Datasets/accident_2014.csv')[ ,c('STATE', 'YEAR', 'DRUNK_DR')]
accidents_2015 <- read.csv('./Datasets/accident_2015.csv')[ ,c('STATE', 'YEAR', 'DRUNK_DR')]
accidents_2016 <- read.csv('./Datasets/accident_2016.csv')[ ,c('STATE', 'YEAR', 'DRUNK_DR')]
accidents_2017 <- read.csv('./Datasets/accident_2017.csv')[ ,c('STATE', 'YEAR', 'DRUNK_DR')]
accidents_2018 <- read.csv('./Datasets/accident_2018.csv')[ ,c('STATE', 'YEAR', 'DRUNK_DR')]
#accidents_2019 <- read.csv('./Datasets/accident_2019.csv')[ ,c('STATE', 'YEAR', 'DRUNK_DR')]
# STATE NUMBERS
state_numbers_data <- read.csv('./Datasets/state_names_numbers.csv')
library(dplyr)
library(usmap)
library(ggplot2)
# INDIVIDUAL YEAR DATA
accidents_2014 <- read.csv('./Datasets/accident_2014.csv')[ ,c('STATE', 'YEAR', 'DRUNK_DR')]
accidents_2015 <- read.csv('./Datasets/accident_2015.csv')[ ,c('STATE', 'YEAR', 'DRUNK_DR')]
accidents_2016 <- read.csv('./Datasets/accident_2016.csv')[ ,c('STATE', 'YEAR', 'DRUNK_DR')]
accidents_2017 <- read.csv('./Datasets/accident_2017.csv')[ ,c('STATE', 'YEAR', 'DRUNK_DR')]
accidents_2018 <- read.csv('./Datasets/accident_2018.csv')[ ,c('STATE', 'YEAR', 'DRUNK_DR')]
#accidents_2019 <- read.csv('./Datasets/accident_2019.csv')[ ,c('STATE', 'YEAR', 'DRUNK_DR')]
# STATE NUMBERS
state_numbers_data <- read.csv('./Datasets/state_names_numbers.csv')
# GET THE POPULATION DATA FROM YEAR 2015 TO 2019 SO THAT WE CAN CALCULATE THE GALLONS ON ALCOHOL CONSUMED/SOLD STATE WISE
population_state_year <- read.csv('./Datasets/population_statewise_2014-2018.csv', check.names = FALSE)[, c("Name", "2014", "2015", '2016', "2017", "2018")]
# GET THE ALCOHOL CONSUMED DATA, WHICH HAS ETHANOL CONSUMED PER CAPITA
liquor_sales_raw <- read.csv('./Datasets/apparent_per_capita_liquor_sales_1977_2018.csv')
# COMBINE ALL REPORTS FROM EACH YEAR
accidents_all <- rbind(accidents_2014, accidents_2015, accidents_2016, accidents_2017, accidents_2018)
# FILTER ACCIDENTS WHICH ARE DRUNK DRIVE ONLY
dui_accidents_all <- subset(accidents_all, DRUNK_DR == 1)
# RETRIEVE THE STATENAMES BY JOINING WITH STATE NUMBERS
accidents_state_wise <- merge(dui_accidents_all, state_numbers_data, all.x = FALSE, all.y = FALSE)
accidents_state_wise$region <- tolower(accidents_state_wise$STATE_NAME)
# FILTER THE REQUIRED YEARS AND COLUMNS
liquor_sales_2014_2018 <- subset(liquor_sales_raw, year %in% c("2014", "2015", "2016", "2017", "2018"))[, c('state', 'year', 'ethanol_all_drinks_gallons_per_capita')]
# NORMALIZE THE STATE NAMES BY MAKING THEM UPPER CASE
liquor_sales_2014_2018$region <- tolower(liquor_sales_2014_2018$state)
# NORMALIZE THE STATE NAMES BY MAKING THEM UPPER CASE
population_state_year$region <- tolower(population_state_year$Name)
# DECLARE ALL THE STATE POPULATION AS 0 INITIALLY
liquor_sales_2014_2018[, "population"] = 0
# LOOP OVER THE INDIVIDUAL STATE POPULATION AND ADD THE VALUES TO ALCOHOL SALES DATA SET
# SINCE THE POPULATION DATASET IS IN A MATRIX FORMAT WE NEED TO LOOP OVER EACH ENTRY AND CANNOT AUTOMATICALLY JOIN
i <- 1
for (row in 1:nrow(population_state_year)) {
if (i < nrow(liquor_sales_2014_2018)) {
liquor_sales_2014_2018[i, "population"] = population_state_year[row, "2018"]
liquor_sales_2014_2018[i + 1, "population"] = population_state_year[row, "2017"]
liquor_sales_2014_2018[i + 2, "population"] = population_state_year[row, "2016"]
liquor_sales_2014_2018[i + 3, "population"] = population_state_year[row, "2015"]
liquor_sales_2014_2018[i + 4, "population"] = population_state_year[row, "2014"]
i <- i + 5
}
}
# REMOVE COMMAS AND CONVERT THE POPULATION VALUE TO A NUMERIC ONE
liquor_sales_2014_2018$population <-  as.numeric(gsub(",","",liquor_sales_2014_2018$population))
# MULIPLY THE POPULATION WITH THE PER CAPITA sales WHICH WILL GIVE US THE TOTAL GALLONS A STATE CONSUMED IN THAT YEAR
liquor_sales_2014_2018$total_gallons <- liquor_sales_2014_2018$ethanol_all_drinks_gallons_per_capita * liquor_sales_2014_2018$population
accidents_year_vs_state <- setNames(aggregate(accidents_state_wise$DRUNK_DR, by=list(state=accidents_state_wise$STATE_NAME, year=accidents_state_wise$YEAR), FUN=sum), c("state", "year", "occurences"))
View(accidents_year_vs_state)
remove(accidents_2014)
remove(accidents_2015)
remove(accidents_2016)
remove(accidents_2017)
remove(accidents_2018)
remove(accidents_all)
remove(accidents_state_wise)
remove(dui_accidents_all)
remove(liquor_sales_raw)
remove(population_state_year)
remove(state_numbers_data)
remove(i)
remove(row)
View(accidents_year_vs_state)
save.image("~/Analytics/liquor_consumption_vs_sales/data_liquor_sales_vs_dui_reports.RData")
